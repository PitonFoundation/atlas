// base.less imports all other less files.

// variables
@import "variables.less";

@import "grid.less";
// Layout for story section content in the builder/viewer
@import "story_layout.less";

// fonts
@font-face {
    font-family: 'MuseoSlab500Regular';
    src: url('../css/font-face/museo_slab_500-webfont.eot');
    src: url('../css/font-face/museo_slab_500-webfont.eot?#iefix') format('embedded-opentype'),
         url('../css/font-face/museo_slab_500-webfont.woff') format('woff'),
         url('../css/font-face/museo_slab_500-webfont.ttf') format('truetype'),
         url('../css/font-face/museo_slab_500-webfont.svg#MuseoSlab500Regular') format('svg');
    font-weight: normal;
    font-style: normal;

}


@font-face {
    font-family: 'Museo300Regular';
    src: url('../css/font-face/museo300-regular-webfont.eot');
    src: url('../css/font-face/museo300-regular-webfont.eot?#iefix') format('embedded-opentype'),
         url('../css/font-face/museo300-regular-webfont.woff') format('woff'),
         url('../css/font-face/museo300-regular-webfont.ttf') format('truetype'),
         url('../css/font-face/museo300-regular-webfont.svg#Museo300Regular') format('svg');
    font-weight: normal;
    font-style: normal;

}

@import "font-awesome.less";

// mixins

// Class/mixin for hiding the text inside an element
// I often use this to hide text in an icon button
.hide-text {
  position: absolute;
  top: -9999px;
  left: -9999px;
}

.transition-duration(@duration: 0.2s) {
  -moz-transition-duration: @duration;
  -webkit-transition-duration: @duration;
  -o-transition-duration: @duration;
  transition-duration: @duration;
}


.button-style(@_:gray) {
	padding:8px;
	background:#878787;
	font-family: "Museo300Regular";
	font-size:14px;
	border-radius:4px;
	border:none;
	font-weight:normal;
	color:white !important;
	cursor:pointer;
        text-decoration: none;
	text-shadow:0 -1px 0 rgba(0, 0, 0, .4);
	display:inline-block;

	&.right {
		margin-left:8px;
	}
	&:hover {
		text-decoration:none !important;
	}
}

.button-style(hot) {
  background:@orange;
  &:hover {
    background:darken(desaturate(@orange, 20%), 20%);
  }
}
.button-style(cool) {
  background:@highlight-blue;
  &:hover {
    background:darken(desaturate(@highlight-blue, 20%), 20%);
  }
}

.button-style(gray) {
  background:@medium-gray;
  &:hover {
    background:@orange;
  }
}

// CSS classes for button styles
.button {
  .button-style;

  &.hot {
    .button-style(hot);
  }

  &.cool {
    .button-style(cool);
  }

  &.gray {
    .button-style(gray);
  }
}

// Reset button styles
// Use this for buttons that you don't want to show up as a button
.button-reset () {
  border: none;
  background: none;
  padding: 0;
  margin: 0;
  width: auto;
  text-align: center;
  text-shadow: none;
}

.button-container {
  padding: 2em 0;
}

.rounded-corners (@radius: 5px) {
	border-radius: @radius;
	-webkit-border-radius: @radius;
	-moz-border-radius: @radius;
}

.box-shadow (@x: 0, @y: 0, @blur: 1px, @color: #000) {
  box-shadow: @arguments;
  -moz-box-shadow: @arguments;
  -webkit-box-shadow: @arguments;
}

// there is probably a nicer way to do this...
.box-shadow-inset (@x: 0, @y: 0, @blur: 1px, @color: #000) {
  box-shadow: inset @arguments;
  -moz-box-shadow: inset @arguments;
  -webkit-box-shadow: inset @arguments;
}

.button:hover {
	text-decoration: none;
}
.button:active {
	position: relative;
	top: 1px;
}

.gradient-button (@base-color: #888, @text-color: white) {
  display: inline-block;
  outline: none;
  cursor: pointer;
  text-align: center;
  text-decoration: none;
  padding: .5em .5em .55em;
  text-shadow: 0 1px 1px rgba(0, 0, 0, .3);
  .rounded-corners(.5em);
  .box-shadow(0, 1px, 2px, rgba(0, 0, 0, .2));
  
  color: @text-color;
  border: solid 1px darken(@base-color, 20%);
  background: @base-color;
  background: -webkit-gradient(linear, left top, left bottom, from(lighten(@base-color, 20%)), to(darken(@base-color, 20%)));
  background: -moz-linear-gradient(top,  lighten(@base-color, 20%), darken(@base-color, 20%));
  filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='lighten(@base-color, 20%)', endColorstr='darken(@base-color, 20%)');
  
  &:hover {
    background: darken(@base-color, 10%);
    background: -webkit-gradient(linear, left top, left bottom, from(lighten(@base-color, 10%)), to(darken(@base-color, 30%)));
    background: -moz-linear-gradient(top,  lighten(@base-color, 10%), darken(@base-color, 30%));
  }
}


.remove-icon(@size, @color) {
  cursor:pointer;
  color:@color;
  &:hover {
    color:darken(@color, 20%);
  }
  &:after {
    font-family: "FontAwesome";
    content:"\f057";
    font-size:@size;
    width:@size;
    height:@size;
  }
}

.icon-paragraph {
  &:before { content: "\00b6"; }
}

.icon-heading-h3 {
  &:before { content: "H3"; }
}

.plain-serif-text {
  font-family:'Times New Roman', Georgia, Serif;
}

.sans-serif-text {
  font-family: Arial, sans-serif;
}

.box-sizing(@sizing) {
  -webkit-box-sizing: @sizing;
  -moz-box-sizing: @sizing;
  -ms-box-sizing: @sizing;
}

@body-copy-margin-bottom: 1em;

.body-copy {
  .sans-serif-text;
  font-size:@base-font-size;
  line-height:@base-line-height;
  color:@body-copy-color; 
  p {
    margin-bottom: @body-copy-margin-bottom;
  }
  dd p, dt p, li p {
    margin-bottom:0;
  }
  a {
    color:@highlight-blue;
    &:visited {
      color:@visited-blue;
    }
  }
}

.body-copy-lists {
  ul, ol {
    padding-left: 20px;
    margin-bottom: @body-copy-margin-bottom;
  }
  ul li {
    list-style-type: square;
  }
  ol li {
    list-style-type: decimal;
  }
}

.styled-header(@align: center) {
  text-align:@align;
  font-family: 'Museo300Regular';
  font-weight:normal;
}

.line-through-header {
  background:url('../img/h3-line.png') repeat-x 0 8px; 
  margin-bottom:10px;
  
  // line-through effect looks best with 1em line height
  line-height:1em;
  
  span {
    background:#fff; 
    padding-left:16px; 
    padding-right:16px;
  }
}

.standard-headers(@align: center) {
  h1 { font-size:@h1-size; color:@dark-gray; .styled-header(@align); .line-through-header; }
  h2 { font-size:@h2-size; color:@dark-gray; .styled-header(@align); }
  h3 { font-size:@h3-size; color:@medium-gray; .styled-header(@align); }
  h4 { font-size:@h4-size; color:@medium-gray; .styled-header(@align); }
  h5 { font-size:@h5-size; color:@highlight-blue; .styled-header(@align); }
  h1, h2, h3, h4, h5 {
    // explicit property seems neccesary to properly set line height using ems.
    line-height:@base-line-height;
  }
  
  // if a header is following any other element, give the header
  // a little extra top-margin.
  * {
    &+h1, &+h2, &+h3, &+h4, &+h5 {
      margin-top:1.2em;
    }
  }
}


.centered {
  text-align: center;
}

// global stuff

html { font-size: 100%; -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; }

body, button, input, select, textarea { 
  .body-copy;
}

* { margin: 0; padding: 0; outline: 0; }

body, html { height: 100%; }

button {
  .button-style(hot);
}

body.base-template {

    .sans-serif-text;
    font-size: @base-font-size;
    line-height:@base-line-height;
    color: @dark-gray;
    background:url('../img/body.jpg') repeat-x 0 0;
    min-width: 100%;
    overflow-y:scroll;

    .standard-headers;

	// based on "everything" comp, text content
	// headers are relatively diminuitive.
	// @see content-page.less. putting this here
	// for reference to "regular" header sizes.
	// could probably make a variable or something...
	.content-block {
		h2 { font-size:(@top-header-size * .6); }
		h3 { font-size:(@top-header-size * .5); }
		h4 { font-size:(@top-header-size * .4); }
		h5 { font-size:(@top-header-size * .3); }
	}

	a { color: @highlight-blue; text-decoration: none; cursor: pointer; }
	a:hover { text-decoration: underline; }
	a:visited { color: @visited-blue; }
	a.secondary { color: @secondary-highlight-blue; }
	a img { border: 0; }

	textarea { overflow: auto; }

	.cl { display: block; height: 0; font-size: 0; line-height: 0; text-indent: -4000px; clear: both; }
	.notext { font-size: 0; line-height: 0; text-indent: -4000px; }
	.left, .alignleft { float: left; display: inline; }
	.right, .alignright { float: right; display: inline; }

	ul { list-style:none; }

	.modal {
		display: none;
	}

	#main a.button {
		.button-style(cool);
		display:inline-block;

                &.hot {
                  .button-style(hot);
                }

                &.gray {
                  .button-style(gray);
                }
	}
}


// imports

body.base-template {
	@import "header.less";
	@import "footer.less";
	@import "megamenu.less";
	@import "sidebar.less";
	@import "homepage.less";
	@import "misc.less";
	@import "content-page.less";
	@import "forms.less";
	@import "comments.less";
	@import "accounts.less";
	@import "template-layout.less";
}

@import "tables.less";


@import "storybase-share.less";

body.story-builder {
	@import "builder.less";	
}

// viewer css already has .story-viewer qualification
@import "viewer.less";


body.explorer {
	@import "explorer.less";
}

@import "search.less";

// html5-boilerplate helpers want to go after other markup
@import "helpers.less";
