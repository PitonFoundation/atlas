// mixins

// Class/mixin for hiding the text inside an element
// I often use this to hide text in an icon button
.hide-text {
  position: absolute;
  top: -9999px;
  left: -9999px;
}

.transition-duration(@duration: 0.2s) {
  transition-duration: @duration;
}

.button-style(@_:gray) {
	padding:8px;
	background:#878787;
	font-family: "roboto condensed";
	font-size:14px;
	border-radius:4px;
	border:none;
	font-weight:normal;
	color:white !important;
	cursor:pointer;
  text-decoration: none;
	text-shadow:0 -1px 0 rgba(0, 0, 0, .4);
	display:inline-block;

	&.right {
		margin-left:8px;
	}
	&:hover {
		text-decoration:none !important;
	}
}

.button-style(hot) {
  background:@orange;
  &:hover {
    background:darken(desaturate(@orange, 20%), 20%);
  }
}
.button-style(cool) {
  background:@highlight-blue;
  &:hover {
    background:darken(desaturate(@highlight-blue, 20%), 20%);
  }
}

.button-style(gray) {
  background:@dark-gray;
  &:hover {
    background:darken(@dark-gray, 10%);
  }
}

.border-box {
  box-sizing:border-box;
}

// Reset button styles
// Use this for buttons that you don't want to show up as a button
.button-reset () {
  border: none;
  background: none;
  padding: 0;
  margin: 0;
  width: auto;
  text-align: center;
  text-shadow: none;

  &:hover {
    background: none;
  }
}

// CSS classes for button styles
.button {
  .button-style;
  &.hot {
    .button-style(hot);
  }

  &.cool {
    .button-style(cool);
  }

  &.gray {
    .button-style(gray);
  }

  &.reset {
    .button-reset;
  }

  &.small {
    padding: 2px;
  }

  &[disabled], &.disabled {
    opacity: 0.65;
    // Trigger hasLayout in IE, and use filter as IE doesn't support
    // opacity.
    zoom: 1;
    filter: alpha(opacity=65);
  }
}

.button-container {
  padding: 2em 0;
}

.pullquote {
  font-size:22px;
  float:left;
  font-style:italic;
  line-height:1.2em;
  color:@gray;
  width:48%;
  padding-right:2%
}
.pullquote.right {
  float:right;
  padding: 0 0 0 2%;
}


.rounded-corners (@radius: 5px) {
	border-radius: @radius;
}

.box-shadow (@x: 0, @y: 0, @blur: 1px, @color: #000) {
  box-shadow: @arguments;
}

// there is probably a nicer way to do this...
.box-shadow-inset (@x: 0, @y: 0, @blur: 1px, @color: #000) {
  box-shadow: inset @arguments;
}

.button:hover {
	text-decoration: none;
}
.button:active {
	position: relative;
	top: 1px;
}

.gradient-button (@base-color: #888, @text-color: white) {
  display: inline-block;
  outline: none;
  cursor: pointer;
  text-align: center;
  text-decoration: none;
  padding: .5em .5em .55em;
  text-shadow: 0 1px 1px rgba(0, 0, 0, .3);
  .rounded-corners(.5em);
  .box-shadow(0, 1px, 2px, rgba(0, 0, 0, .2));

  color: @text-color;
  border: solid 1px darken(@base-color, 20%);
  background: @base-color;
  background: -webkit-gradient(linear, left top, left bottom, from(lighten(@base-color, 20%)), to(darken(@base-color, 20%)));
  background: -moz-linear-gradient(top,  lighten(@base-color, 20%), darken(@base-color, 20%));
  // While this produces a gradient in MSIE, it overflows the rounded corners
  // Disable it for now
  //filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='lighten(@base-color, 20%)', endColorstr='darken(@base-color, 20%)');

  &:hover {
    background: darken(@base-color, 10%);
    background: -webkit-gradient(linear, left top, left bottom, from(lighten(@base-color, 10%)), to(darken(@base-color, 30%)));
    background: -moz-linear-gradient(top,  lighten(@base-color, 10%), darken(@base-color, 30%));
  }
}

.btn-group {
  display: inline-block;
}

// Use Bootstrap's JavaScript for Dropdown buttons
.dropdown-menu {
  background-color: #FFFFFF;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 6px 6px 6px 6px;
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
  display: none;
  float: left;
  left: 0;
  list-style: none outside none;
  margin: 2px 0 0;
  min-width: 160px;
  max-width: 300px;
  padding: 5px 0;
  position: absolute;
  top: 100%;
  z-index: 1000;
}

.open > .dropdown-menu {
  display: block;
}

.dropdown-menu > li > a {
  clear: both;
  display: block;
  padding: 3px 20px;
}

.dropdown-menu.icons {
  margin-left: 0;
  padding-left: 1em;
}

.remove-icon(@size, @color) {
  cursor:pointer;
  color:@color;
  &:hover {
    color:darken(@color, 20%);
  }
  &:after {
    font-family: "FontAwesome";
    content:"\f057";
    font-size:@size;
    width:@size;
    height:@size;
  }
}

.inner-section-divot(@size:1em, @color:@almost-white) {
  color:@color;
  &:after {
    font-family:"FontAwesome";
    content: "\f0d7";
    font-size:@size;
    width:@size;
    height:@size;
  }
}

.icon-paragraph {
  &:before { content: "\00b6"; }
}

.icon-heading-h3 {
  &:before { content: "H3"; }
}

// Mixins that replicate some of the Font Awesome classes
.fa-icon-mixin() {
  font-family: FontAwesome;
  font-weight: normal;
  font-style: normal;
  display: inline-block;
  text-decoration: inherit;
}

.icon-comment-mixin {
  &:before {
    .fa-icon-mixin;
    content: "\f075";
  }
}

.plain-serif-text {
  font-family:'Times New Roman', Georgia, Serif;
}

.sans-serif-text {
  font-family: 'Roboto';
}

.box-sizing(@sizing) {
  box-sizing: @sizing;
}

@body-copy-margin-bottom: 1em;

.body-copy {
  .sans-serif-text;
  font-size:@base-font-size;
  line-height:@base-line-height;
  color:@body-copy-color;
  p {
    margin-bottom: @body-copy-margin-bottom;
  }
  dd p, dt p, li p {
    margin-bottom:0;
  }
  a {
    color:@highlight-blue;
    &:visited {
      color:@visited-blue;
    }
  }
}

.body-copy-lists {
  ul, ol {
    padding-left: 20px;
    margin-bottom: @body-copy-margin-bottom;
  }
  ul li {
    list-style-type: square;
  }
  ol li {
    list-style-type: decimal;
  }
}

.styled-header(@align: center) {
  text-align:@align;
  font-family: @styled-header-family;
  font-weight:normal;
}

// Story's title, as it appears in the viewer
// This is defined in the mixin so we can easily match styles between the
// viewer and builder
.viewer-story-title() {
  .styled-header(left);
  padding: 0;
  font-weight: 900;
  font-size: 22px; //28.8px;
  line-height:1.2em;
  margin-top: 12px;
  margin-left: 10px;
}

.line-through-header {
  margin-bottom: 10px;

  // line-through effect looks best with 1em line height
  line-height: 1em !important;

  @media (min-width: @screen-sm-min) {
    background: url('../img/h3-line.png') repeat-x 0 8px;
    span {
      background: #fff;
      padding-left: 16px;
      padding-right: 16px;
    }
  }
}

.standard-headers(@align: center) {
  h1 {
    font-size: ceil((@h1-size * 0.66));
    color: @dark-gray;
    .styled-header(@align);
    .line-through-header;

    @media (min-width: @screen-xs-min) {
      font-size: @h1-size;
    }
  }
  h1.no-line { background:none; margin-bottom:inherit; }
  h2 { font-size:@h2-size; color:@dark-gray; .styled-header(@align); }
  h3 { font-size:@h3-size; color:@medium-gray; .styled-header(@align); }
  h4 { font-size:@h4-size; color:@medium-gray; .styled-header(@align); }
  h5 { font-size:@h5-size; color:@highlight-blue; .styled-header(@align); }
  h1, h2, h3, h4, h5 {
    // explicit property seems neccesary to properly set line height using ems.
    line-height:@base-line-height;
  }

  // if a header is following any other element, give the header
  // a little extra top-margin.
  * {
    &+h1, &+h2, &+h3, &+h4, &+h5 {
      margin-top:1.2em;
    }
  }
}

.centered {
  text-align: center;
}

// Pills
.pills {
  padding-left: 0;

  >li {
    position:relative;
    display: inline-block;
    margin-right: 4px;
    padding: 4px 0 0;
    list-style-type: none;

    &.active {
      >a {
        color: #fff;
        background-color: @visited-blue;

        &:hover {
          background-color: @visited-blue;
        }
      }

      &:after {
        position:absolute;
        font-family: "FontAwesome";
        content:"\f0D7";
        color:@visited-blue;
        font-size:18px;
        height:20px;
        width:100%;
        top:19px;
        left:0;
        text-align:center;
      }

      &.error {
        >a {
          background-color:@error-color;
          &:hover {
            background-color:@error-color;
          }
        }
        &:after {
          color:@error-color;
        }
      }
    }

    &.disabled {
      >a {
        color: @light-gray;
        cursor: default;
        &:hover {
          background-color: transparent;
        }
      }
    }

    // (non-active error)
    &.error {
      >a {
        background-color:lighten(@error-color, 25%);
        &:hover {
          background-color:lighten(@error-color, 20%);
        }
      }
      &:after {
        color:lighten(@error-color, 25%);
      }
    }

    >a {
      .rounded-corners(4px);
      padding: 4px;
      text-decoration: none;

      &:hover {
        background-color: @light-gray;
      }

    }
  }
}

// Error popups
.error-popup {
  .rounded-corners;
  color: @error-color;
  background-color: lighten(@error-color, 30%);
  border: 1px solid @error-color;
  position: fixed;
  top: 50%;
  left: 50%;
  width: 200px;
  height: 100px;
  margin-top: -50px;
  margin-left: -100px;
  padding: 20px;
  z-index: 100000005 !important
}

// error/notification list items
.notification-list {
  padding-left: 0 !important;
}

.notification-list-item {
  .rounded-corners;
  border:1px solid #bbb;
  padding:10px;
  margin:20px 0;
  color:@medium-gray;
  font-size:16px;
  list-style-type: none !important;
}

.error-item {
  color: @error-color;
  border-color: @error-border-color;
  background-color: @error-background-color;
  &:before {
    font-family:"FontAwesome";
    content: "\f071";
    display: inline;
    padding-right:1em;
  }
}

.success-item {
  color: @success-color;
  border-color: @success-border-color;
  background-color: @success-background-color;
}

ul.messages {
  .notification-list;
  li {
    .notification-list-item;

    &.error {
      .error-item;
    }

    &.success {
      .success-item;
    }
  }
}

.menu-bar {
  display: block;
  width: 22px;
  height: 2px;
  border-radius: 1px;
  margin-top: 4px;
  background-color: #fff;
}
